<UserControl 
    x:Class="MicaForEveryone.UI.TrayIconView"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:local="using:MicaForEveryone.UI"
    xmlns:converters="using:MicaForEveryone.UI.Converters"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    mc:Ignorable="d"
    d:DesignHeight="300"
    d:DesignWidth="400">
    <ToolTipService.ToolTip>
        <ToolTip x:Uid="TrayIconTooltip" />
    </ToolTipService.ToolTip>
    <UserControl.Resources>
        <converters:IsEqualConverter x:Key="IsEqualConverter" />
        <converters:VisibilityConverter x:Key="VisibilityConverter" />
    </UserControl.Resources>
    <UserControl.ContextFlyout>
        <MenuFlyout>
            <MenuFlyoutSubItem x:Uid="TitlebarColorMenu">
                <MenuFlyoutSubItem.Icon>
                    <FontIcon FontFamily="{StaticResource SymbolThemeFontFamily}" Glyph="&#xE2B1;" />
                </MenuFlyoutSubItem.Icon>
                <MenuFlyoutSubItem.Items>
                    <ToggleMenuFlyoutItem 
                        x:Uid="DefaultMenuItem"
                        IsChecked="{x:Bind ViewModel.TitlebarColor, Converter={StaticResource IsEqualConverter}, ConverterParameter=Default, Mode=OneWay}"
                        Command="{x:Bind ViewModel.ChangeTitlebarColorModeCommand}"
                        CommandParameter="Default"/>

                    <ToggleMenuFlyoutItem 
                        x:Uid="SystemMenuItem"
                        IsChecked="{x:Bind ViewModel.TitlebarColor, Converter={StaticResource IsEqualConverter}, ConverterParameter=System, Mode=OneWay}"
                        Command="{x:Bind ViewModel.ChangeTitlebarColorModeCommand}"
                        CommandParameter="System"/>

                    <ToggleMenuFlyoutItem 
                        x:Uid="LightMenuItem"
                        IsChecked="{x:Bind ViewModel.TitlebarColor, Converter={StaticResource IsEqualConverter}, ConverterParameter=Light, Mode=OneWay}"
                        Command="{x:Bind ViewModel.ChangeTitlebarColorModeCommand}" 
                        CommandParameter="Light"/>

                    <ToggleMenuFlyoutItem 
                        x:Uid="DarkMenuItem"
                        IsChecked="{x:Bind ViewModel.TitlebarColor, Converter={StaticResource IsEqualConverter}, ConverterParameter=Dark, Mode=OneWay}"
                        Command="{x:Bind ViewModel.ChangeTitlebarColorModeCommand}"
                        CommandParameter="Dark"/>
                </MenuFlyoutSubItem.Items>
            </MenuFlyoutSubItem>

            <MenuFlyoutSubItem x:Uid="BackdropMenu">
                <MenuFlyoutSubItem.Icon>
                    <FontIcon FontFamily="{StaticResource SymbolThemeFontFamily}" Glyph="&#xF5EF;" />
                </MenuFlyoutSubItem.Icon>
                <MenuFlyoutSubItem.Items>
                    <ToggleMenuFlyoutItem 
                        x:Uid="DefaultMenuItem"
                        IsChecked="{x:Bind ViewModel.BackdropType, Converter={StaticResource IsEqualConverter}, ConverterParameter=Default, Mode=OneWay}"
                        Command="{x:Bind ViewModel.ChangeBackdropTypeCommand}" 
                        CommandParameter="Default" />

                    <ToggleMenuFlyoutItem 
                        x:Uid="NoneMenuItem"
                        IsChecked="{x:Bind ViewModel.BackdropType, Converter={StaticResource IsEqualConverter}, ConverterParameter=None, Mode=OneWay}"
                        Command="{x:Bind ViewModel.ChangeBackdropTypeCommand}" 
                        CommandParameter="None"/>

                    <ToggleMenuFlyoutItem 
                        x:Uid="MicaMenuItem"
                        IsChecked="{x:Bind ViewModel.BackdropType, Converter={StaticResource IsEqualConverter}, ConverterParameter=Mica, Mode=OneWay}"
                        Command="{x:Bind ViewModel.ChangeBackdropTypeCommand}" 
                        CommandParameter="Mica" />

                    <ToggleMenuFlyoutItem 
                        x:Uid="AcrylicMenuItem"
                        Visibility="{x:Bind ViewModel.SystemBackdropIsSupported, Converter={StaticResource VisibilityConverter}}"
                        IsChecked="{x:Bind ViewModel.BackdropType, Converter={StaticResource IsEqualConverter}, ConverterParameter=Acrylic, Mode=OneWay}"
                        Command="{x:Bind ViewModel.ChangeBackdropTypeCommand}" 
                        CommandParameter="Acrylic" />

                    <ToggleMenuFlyoutItem 
                        x:Uid="TabbedMenuItem"
                        Visibility="{x:Bind ViewModel.SystemBackdropIsSupported, Converter={StaticResource VisibilityConverter}}"
                        IsChecked="{x:Bind ViewModel.BackdropType, Converter={StaticResource IsEqualConverter}, ConverterParameter=Tabbed, Mode=OneWay}"
                        Command="{x:Bind ViewModel.ChangeBackdropTypeCommand}" 
                        CommandParameter="Tabbed" />
                </MenuFlyoutSubItem.Items>
            </MenuFlyoutSubItem>

            <MenuFlyoutSeparator />

            <MenuFlyoutItem x:Uid="SettingsMenuItem" Command="{x:Bind ViewModel.OpenSettingsCommand}">
                <MenuFlyoutItem.Icon>
                    <SymbolIcon Symbol="Setting" />
                </MenuFlyoutItem.Icon>
            </MenuFlyoutItem>

            <MenuFlyoutSubItem x:Uid="AdvancedMenu">
                <MenuFlyoutSubItem.Icon>
                    <FontIcon FontFamily="{StaticResource SymbolThemeFontFamily}" Glyph="&#xE15E;" />
                </MenuFlyoutSubItem.Icon>
                <MenuFlyoutSubItem.Items>
                    <MenuFlyoutItem x:Uid="OpenInEditorMenuItem" Command="{x:Bind ViewModel.EditConfigCommand}">
                        <MenuFlyoutItem.Icon>
                            <FontIcon FontFamily="{StaticResource SymbolThemeFontFamily}" Glyph="&#xE104;" />
                        </MenuFlyoutItem.Icon>
                    </MenuFlyoutItem>
                    <MenuFlyoutItem x:Uid="ReloadMenuItem" Command="{x:Bind ViewModel.ReloadConfigCommand}">
                        <MenuFlyoutItem.Icon>
                            <SymbolIcon Symbol="Refresh" />
                        </MenuFlyoutItem.Icon>
                    </MenuFlyoutItem>
                </MenuFlyoutSubItem.Items>
            </MenuFlyoutSubItem>

            <MenuFlyoutItem x:Uid="ExitMenuItem" Command="{x:Bind ViewModel.ExitCommand}">
                <MenuFlyoutItem.Icon>
                    <FontIcon FontFamily="{StaticResource SymbolThemeFontFamily}" Glyph="&#xE7E8;" />
                </MenuFlyoutItem.Icon>
            </MenuFlyoutItem>
        </MenuFlyout>
    </UserControl.ContextFlyout>
</UserControl>
