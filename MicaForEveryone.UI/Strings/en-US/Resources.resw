<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="AboutTitle.Text" xml:space="preserve">
    <value>About this app</value>
  </data>
  <data name="AcrylicBackdropDescription.Text" xml:space="preserve">
    <value>Acrylic forces all apps to use Windows 10-style blur backdrop effect.</value>
  </data>
  <data name="AcrylicMenuItem.Text" xml:space="preserve">
    <value>Acrylic</value>
  </data>
  <data name="AddClassRuleMenuItem.Text" xml:space="preserve">
    <value>Add Class Rule</value>
  </data>
  <data name="AddProcessRuleMenuItem.Text" xml:space="preserve">
    <value>Add Process Rule</value>
  </data>
  <data name="AddRuleButton.Content" xml:space="preserve">
    <value>Add Rule</value>
  </data>
  <data name="AdvancedMenu.Text" xml:space="preserve">
    <value>Config file</value>
  </data>
  <data name="AppName" xml:space="preserve">
    <value>Mica For Everyone</value>
  </data>
  <data name="AppNameLabel.Text" xml:space="preserve">
    <value>Mica For Everyone</value>
  </data>
  <data name="BackdropDescription.Text" xml:space="preserve">
    <value>Set backdrop type,</value>
  </data>
  <data name="BackdropMenu.Text" xml:space="preserve">
    <value>Backdrop Type</value>
  </data>
  <data name="BackdropTypeLabel.Text" xml:space="preserve">
    <value>Backdrop Type:</value>
  </data>
  <data name="CloseButton.Content" xml:space="preserve">
    <value>Close</value>
  </data>
  <data name="ConfigFileError.Header" xml:space="preserve">
    <value>Error in config file</value>
  </data>
  <data name="DarkMenuItem.Text" xml:space="preserve">
    <value>Dark</value>
  </data>
  <data name="DarkTitlebarColorDescription.Text" xml:space="preserve">
    <value>Dark uses dark theme.</value>
  </data>
  <data name="DefaultBackdropDescription.Text" xml:space="preserve">
    <value>Default doesn't do anything to keep app's default backdrop.</value>
  </data>
  <data name="DefaultMenuItem.Text" xml:space="preserve">
    <value>Default</value>
  </data>
  <data name="DefaultTitlebarColorDescription.Text" xml:space="preserve">
    <value>Default doesn't do anything to keep app's default theme.</value>
  </data>
  <data name="ExitMenuItem.Text" xml:space="preserve">
    <value>Exit</value>
  </data>
  <data name="ExtendFrameIntoClientAreaCheckBox.Content" xml:space="preserve">
    <value>Extend Frame Into Client Area</value>
  </data>
  <data name="ExtendFrameIntoClientAreaDescription.Text" xml:space="preserve">
    <value>Extends window frame into its client area to add backdrop on background of some apps. It doesn't work on every app and may break them, don't enable this unless you know what you are doing.</value>
  </data>
  <data name="GeneralPaneItem.Text" xml:space="preserve">
    <value>General</value>
  </data>
  <data name="GithubButton.Content" xml:space="preserve">
    <value>GitHub</value>
  </data>
  <data name="GithubButton.NavigateUri" xml:space="preserve">
    <value>https://github.com/minusium/MicaForEveryone</value>
  </data>
  <data name="GlobalRulePaneItem.Text" xml:space="preserve">
    <value>Global Rule</value>
  </data>
  <data name="LightMenuItem.Text" xml:space="preserve">
    <value>Light</value>
  </data>
  <data name="LightTitlebarColorDescription.Text" xml:space="preserve">
    <value>Light uses light theme.</value>
  </data>
  <data name="MicaBackdropDescription.Text" xml:space="preserve">
    <value>Mica forces all apps to use Windows 11-style tinted wallpaper backdrop effect.</value>
  </data>
  <data name="MicaMenuItem.Text" xml:space="preserve">
    <value>Mica</value>
  </data>
  <data name="NoneBackdropDescription.Text" xml:space="preserve">
    <value>None disables backdrop, even on apps that already have.</value>
  </data>
  <data name="NoneMenuItem.Text" xml:space="preserve">
    <value>None</value>
  </data>
  <data name="OkButton.Text" xml:space="preserve">
    <value>OK</value>
  </data>
  <data name="OpenInEditorMenuItem.Text" xml:space="preserve">
    <value>Open in text editor</value>
  </data>
  <data name="ReloadConfigCheckBox.Content" xml:space="preserve">
    <value>Reload Config File on changes</value>
  </data>
  <data name="ReloadConfigDescription.Text" xml:space="preserve">
    <value>Reload config automatically when it got changed.</value>
  </data>
  <data name="ReloadMenuItem.Text" xml:space="preserve">
    <value>Reload</value>
  </data>
  <data name="RemoveRuleButton.Content" xml:space="preserve">
    <value>Remove Rule</value>
  </data>
  <data name="RunOnStartupCheckBox.Content" xml:space="preserve">
    <value>Run on Startup</value>
  </data>
  <data name="RunOnStartupDescription.Text" xml:space="preserve">
    <value>Run this app automatically on startup.</value>
  </data>
  <data name="SaveButton.Content" xml:space="preserve">
    <value>Save</value>
  </data>
  <data name="SettingsMenuItem.Text" xml:space="preserve">
    <value>Settings</value>
  </data>
  <data name="SettingsTitle.Text" xml:space="preserve">
    <value>Settings</value>
  </data>
  <data name="SystemMenuItem.Text" xml:space="preserve">
    <value>System</value>
  </data>
  <data name="SystemTitlebarColorDescription.Text" xml:space="preserve">
    <value>System uses your theme preference.</value>
  </data>
  <data name="TabbedBackdropDescription.Text" xml:space="preserve">
    <value>Tabbed forces all apps to use blurred wallpaper backdrop effect.</value>
  </data>
  <data name="TabbedMenuItem.Text" xml:space="preserve">
    <value>Tabbed</value>
  </data>
  <data name="TelegramButton.Content" xml:space="preserve">
    <value>Telegram</value>
  </data>
  <data name="TelegramButton.NavigateUri" xml:space="preserve">
    <value>https://t.me/minusium</value>
  </data>
  <data name="TitlebarColorDescription.Text" xml:space="preserve">
    <value>Set color theme of titlebars,</value>
  </data>
  <data name="TitlebarColorLabel.Text" xml:space="preserve">
    <value>Titlebar Color:</value>
  </data>
  <data name="TitlebarColorMenu.Text" xml:space="preserve">
    <value>Titlebar Color</value>
  </data>
  <data name="TrayIconTooltip.Content" xml:space="preserve">
    <value>Mica For Everyone</value>
  </data>
  <data name="TwitterButton.Content" xml:space="preserve">
    <value>Twitter</value>
  </data>
  <data name="TwitterButton.NavigateUri" xml:space="preserve">
    <value>https://twitter.com/minusium</value>
  </data>
  <data name="UnhandledException.Header" xml:space="preserve">
    <value>Unhandled Exception</value>
  </data>
  <data name="UnhandledUIException.Header" xml:space="preserve">
    <value>Unhandled Exception in UI</value>
  </data>
  <data name="UnsupportedBackdropDescription.Text" xml:space="preserve">
    <value>Acrylic and Tabbed backdrop effects require at least Windows build 22523</value>
  </data>
  <data name="UnsupportedError.Header" xml:space="preserve">
    <value>Unsupported Windows Version</value>
  </data>
  <data name="UnsupportedError.Message" xml:space="preserve">
    <value>This app requires at least Windows 11 (10.0.22000.0) to work.</value>
  </data>
  <data name="VersionLabel.Text" xml:space="preserve">
    <value>Version</value>
  </data>
</root>